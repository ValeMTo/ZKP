COMPILER_INFO = "pragma circom 2.1.4"
BEGIN_TEMPLATE = "template NeuralNetwork (nInputs) {\nsignal input a[nInputs];"
IMPORTS = "include \"./circomlib-ml-master/circuits/ArgMax.circom\"\ninclude \"./circomlib-ml-master/circuits/AveragePooling2D.circom\"\ninclude \"./circomlib-ml-master/circuits/BatchNormalization2D.circom\"\ninclude \"./circomlib-ml-master/circuits/Conv1D.circom\"\ninclude \"./circomlib-ml-master/circuits/Conv2D.circom\"\ninclude \"./circomlib-ml-master/circuits/Dense.circom\"\ninclude \"./circomlib-ml-master/circuits/Flatten2D.circom\"\ninclude \"./circomlib-ml-master/circuits/GlobalAveragePooling2D.circom\"\ninclude \"./circomlib-ml-master/circuits/GlobalMaxPooling2D.circom\"\ninclude \"./circomlib-ml-master/circuits/GlobalSumPooling2D.circom\"\ninclude \"./circomlib-ml-master/circuits/MaxPooling2D.circom\"\ninclude \"./circomlib-ml-master/circuits/ReLU.circom\"\ninclude \"./circomlib-ml-master/circuits/SumPooling2D.circom\""
END_TEMPLATE = "}\n\ncomponent main = NeuralNetwork();"
